<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.college.mapper.MajorMapper">
    
    <resultMap type="Major" id="MajorResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="introduction"    column="introduction"    />
        <result property="departmentId"    column="department_id"    />
        <result property="deleted"    column="deleted"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <association property="department" javaType="Department">
            <id property="id" column="department_id"/>
            <result property="name" column="department_name"/>
        </association>
    </resultMap>

    <sql id="selectMajorVo">
        select id, name, introduction, department_id, deleted, create_time,
               update_time from major where deleted = 0
    </sql>

    <select id="selectMajorList" parameterType="Major" resultMap="MajorResult">
        select m.id,m.name,m.introduction as major_introduction,m.department_id,d.id as department_id,d.name as department_name
        from major m left join department d on m.department_id = d.id
            <where>
            <if test="name != null  and name != ''"> and m.name like concat('%', #{name}, '%')</if>
        and m.deleted = 0
        </where>
    </select>
    
    <select id="selectMajorById" parameterType="Long" resultMap="MajorResult">
        <include refid="selectMajorVo"/>
        where id = #{id}
    </select>

    <select id="list" resultType="com.ruoyi.college.domain.Major">
        select id,name,introduction from major where deleted = 0
    </select>

    <insert id="insertMajor" parameterType="Major" useGeneratedKeys="true" keyProperty="id">
        insert into major
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="introduction != null">introduction,</if>
            <if test="departmentId != null">department_id,</if>
            <if test="deleted != null">deleted,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="introduction != null">#{introduction},</if>
            <if test="departmentId != null">#{departmentId},</if>
            <if test="deleted != null">#{deleted},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateMajor" parameterType="Major">
        update major
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
            <if test="departmentId != null">department_id = #{departmentId},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="deleteMajorById" parameterType="Long">
        update major set deleted = 1 where id = #{id}
    </update>

    <update id="deleteMajorByIds" parameterType="String">
        update major set deleted = 1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>